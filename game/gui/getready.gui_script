local data = require ("main.data")

local function disable_node (self, node)
	gui.set_enabled(node, false)
end

local function show(self)
	gui.set_enabled(self.node, true)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(640,360,0), gui.EASING_INOUTQUAD, 0.5, 0, nil)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,1), gui.EASING_INOUTQUAD, 0.5, 0)
end

function init(self)
	self.node = gui.get_node("container")
	gui.set_text(gui.get_node("level"), string.format("LEVEL %d/10", data.level))
	gui.set_color(self.node, vmath.vector4(1,1,1,0))
	gui.set_position(self.node, vmath.vector3(640, 260, 0))
	if data.level == 1 then
		local c = gui.get_color(gui.get_node("help"))
		c.w = 1.0 
		gui.set_color(gui.get_node("help"), c)
	end
	if data.state == data.STATE_GETREADY then show(self) end
end

local function hide(self)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(640,260,0), gui.EASING_INOUTQUAD, 0.5, 0, disable_node)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,0), gui.EASING_INOUTQUAD, 0.5, 0)
end

function on_message(self, message_id, message, sender)
	if message_id == data.show then
		show(self)
	elseif message_id == data.hide then
		hide(self)
	end
end